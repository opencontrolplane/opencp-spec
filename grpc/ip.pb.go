// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.4
// source: ip.proto

package grpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type IpStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ip         string      `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	Assignedto *AssignedTo `protobuf:"bytes,2,opt,name=assignedto,proto3" json:"assignedto,omitempty"`
}

func (x *IpStatus) Reset() {
	*x = IpStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ip_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IpStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IpStatus) ProtoMessage() {}

func (x *IpStatus) ProtoReflect() protoreflect.Message {
	mi := &file_ip_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IpStatus.ProtoReflect.Descriptor instead.
func (*IpStatus) Descriptor() ([]byte, []int) {
	return file_ip_proto_rawDescGZIP(), []int{0}
}

func (x *IpStatus) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *IpStatus) GetAssignedto() *AssignedTo {
	if x != nil {
		return x.Assignedto
	}
	return nil
}

type IpSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *IpSpec) Reset() {
	*x = IpSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ip_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IpSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IpSpec) ProtoMessage() {}

func (x *IpSpec) ProtoReflect() protoreflect.Message {
	mi := &file_ip_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IpSpec.ProtoReflect.Descriptor instead.
func (*IpSpec) Descriptor() ([]byte, []int) {
	return file_ip_proto_rawDescGZIP(), []int{1}
}

func (x *IpSpec) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type AssignedTo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *AssignedTo) Reset() {
	*x = AssignedTo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ip_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssignedTo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignedTo) ProtoMessage() {}

func (x *AssignedTo) ProtoReflect() protoreflect.Message {
	mi := &file_ip_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignedTo.ProtoReflect.Descriptor instead.
func (*AssignedTo) Descriptor() ([]byte, []int) {
	return file_ip_proto_rawDescGZIP(), []int{2}
}

func (x *AssignedTo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AssignedTo) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *AssignedTo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Ip struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Standard object's metadata.
	// More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	// +optional
	Metadata *v1.ObjectMeta `protobuf:"bytes,3,opt,name=metadata,proto3,oneof" json:"metadata,omitempty"`
	// Spec defines the behavior of a IP.
	// +optional
	Spec *IpSpec `protobuf:"bytes,4,opt,name=spec,proto3,oneof" json:"spec,omitempty"`
	// Status represents the current information about a IP.
	// +optional
	Status *IpStatus `protobuf:"bytes,5,opt,name=status,proto3,oneof" json:"status,omitempty"`
}

func (x *Ip) Reset() {
	*x = Ip{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ip_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ip) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ip) ProtoMessage() {}

func (x *Ip) ProtoReflect() protoreflect.Message {
	mi := &file_ip_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ip.ProtoReflect.Descriptor instead.
func (*Ip) Descriptor() ([]byte, []int) {
	return file_ip_proto_rawDescGZIP(), []int{3}
}

func (x *Ip) GetMetadata() *v1.ObjectMeta {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Ip) GetSpec() *IpSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *Ip) GetStatus() *IpStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

type IpList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Standard object's metadata.
	// More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	// +optional
	Metadata *v1.ListMeta `protobuf:"bytes,4,opt,name=metadata,proto3,oneof" json:"metadata,omitempty"`
	// List of IP
	Items []*Ip `protobuf:"bytes,5,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *IpList) Reset() {
	*x = IpList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ip_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IpList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IpList) ProtoMessage() {}

func (x *IpList) ProtoReflect() protoreflect.Message {
	mi := &file_ip_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IpList.ProtoReflect.Descriptor instead.
func (*IpList) Descriptor() ([]byte, []int) {
	return file_ip_proto_rawDescGZIP(), []int{4}
}

func (x *IpList) GetMetadata() *v1.ListMeta {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *IpList) GetItems() []*Ip {
	if x != nil {
		return x.Items
	}
	return nil
}

var File_ip_proto protoreflect.FileDescriptor

var file_ip_proto_rawDesc = []byte{
	0x0a, 0x08, 0x69, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x69, 0x70, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x1a, 0x34, 0x6b, 0x38, 0x73, 0x2e, 0x69, 0x6f, 0x2f,
	0x61, 0x70, 0x69, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x72, 0x79, 0x2f, 0x70, 0x6b, 0x67,
	0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0d, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x53, 0x0a, 0x08,
	0x49, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x37, 0x0a, 0x0a, 0x61, 0x73, 0x73, 0x69,
	0x67, 0x6e, 0x65, 0x64, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x69,
	0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67,
	0x6e, 0x65, 0x64, 0x54, 0x6f, 0x52, 0x0a, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x74,
	0x6f, 0x22, 0x1c, 0x0a, 0x06, 0x49, 0x70, 0x53, 0x70, 0x65, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22,
	0x44, 0x0a, 0x0a, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x54, 0x6f, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xda, 0x01, 0x0a, 0x02, 0x49, 0x70, 0x12, 0x51, 0x0a, 0x08,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30,
	0x2e, 0x6b, 0x38, 0x73, 0x2e, 0x69, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x6d, 0x61, 0x63, 0x68, 0x69,
	0x6e, 0x65, 0x72, 0x79, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6d, 0x65,
	0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x74, 0x61,
	0x48, 0x00, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x88, 0x01, 0x01, 0x12,
	0x2c, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x69, 0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x49, 0x70, 0x53, 0x70,
	0x65, 0x63, 0x48, 0x01, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x88, 0x01, 0x01, 0x12, 0x32, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x69, 0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x49, 0x70, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x48, 0x02, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x88, 0x01,
	0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x42, 0x07,
	0x0a, 0x05, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0x8d, 0x01, 0x0a, 0x06, 0x49, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x4f, 0x0a,
	0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2e, 0x2e, 0x6b, 0x38, 0x73, 0x2e, 0x69, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x6d, 0x61, 0x63, 0x68,
	0x69, 0x6e, 0x65, 0x72, 0x79, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6d,
	0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x48,
	0x00, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x88, 0x01, 0x01, 0x12, 0x25,
	0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x69, 0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x49, 0x70, 0x52, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x32, 0xdf, 0x01, 0x0a, 0x09, 0x49, 0x70, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x2e, 0x0a, 0x08, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x70, 0x12, 0x0f, 0x2e, 0x69,
	0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x49, 0x70, 0x1a, 0x0f, 0x2e,
	0x69, 0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x49, 0x70, 0x22, 0x00,
	0x12, 0x35, 0x0a, 0x08, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x70, 0x12, 0x16, 0x2e, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x0f, 0x2e, 0x69, 0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x49, 0x70, 0x22, 0x00, 0x12, 0x32, 0x0a, 0x05, 0x47, 0x65, 0x74, 0x49, 0x70,
	0x12, 0x16, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x0f, 0x2e, 0x69, 0x70, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x49, 0x70, 0x22, 0x00, 0x12, 0x37, 0x0a, 0x06, 0x4c,
	0x69, 0x73, 0x74, 0x49, 0x70, 0x12, 0x16, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x13, 0x2e,
	0x69, 0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x49, 0x70, 0x4c, 0x69,
	0x73, 0x74, 0x22, 0x00, 0x42, 0x2e, 0x5a, 0x2c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x70, 0x6c,
	0x61, 0x6e, 0x65, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x70, 0x2d, 0x73, 0x70, 0x65, 0x63, 0x2f,
	0x67, 0x72, 0x70, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ip_proto_rawDescOnce sync.Once
	file_ip_proto_rawDescData = file_ip_proto_rawDesc
)

func file_ip_proto_rawDescGZIP() []byte {
	file_ip_proto_rawDescOnce.Do(func() {
		file_ip_proto_rawDescData = protoimpl.X.CompressGZIP(file_ip_proto_rawDescData)
	})
	return file_ip_proto_rawDescData
}

var file_ip_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_ip_proto_goTypes = []interface{}{
	(*IpStatus)(nil),      // 0: ip.v1alpha1.IpStatus
	(*IpSpec)(nil),        // 1: ip.v1alpha1.IpSpec
	(*AssignedTo)(nil),    // 2: ip.v1alpha1.AssignedTo
	(*Ip)(nil),            // 3: ip.v1alpha1.Ip
	(*IpList)(nil),        // 4: ip.v1alpha1.IpList
	(*v1.ObjectMeta)(nil), // 5: k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta
	(*v1.ListMeta)(nil),   // 6: k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta
	(*FilterOptions)(nil), // 7: options.FilterOptions
}
var file_ip_proto_depIdxs = []int32{
	2,  // 0: ip.v1alpha1.IpStatus.assignedto:type_name -> ip.v1alpha1.AssignedTo
	5,  // 1: ip.v1alpha1.Ip.metadata:type_name -> k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta
	1,  // 2: ip.v1alpha1.Ip.spec:type_name -> ip.v1alpha1.IpSpec
	0,  // 3: ip.v1alpha1.Ip.status:type_name -> ip.v1alpha1.IpStatus
	6,  // 4: ip.v1alpha1.IpList.metadata:type_name -> k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta
	3,  // 5: ip.v1alpha1.IpList.items:type_name -> ip.v1alpha1.Ip
	3,  // 6: ip.v1alpha1.IpService.CreateIp:input_type -> ip.v1alpha1.Ip
	7,  // 7: ip.v1alpha1.IpService.DeleteIp:input_type -> options.FilterOptions
	7,  // 8: ip.v1alpha1.IpService.GetIp:input_type -> options.FilterOptions
	7,  // 9: ip.v1alpha1.IpService.ListIp:input_type -> options.FilterOptions
	3,  // 10: ip.v1alpha1.IpService.CreateIp:output_type -> ip.v1alpha1.Ip
	3,  // 11: ip.v1alpha1.IpService.DeleteIp:output_type -> ip.v1alpha1.Ip
	3,  // 12: ip.v1alpha1.IpService.GetIp:output_type -> ip.v1alpha1.Ip
	4,  // 13: ip.v1alpha1.IpService.ListIp:output_type -> ip.v1alpha1.IpList
	10, // [10:14] is the sub-list for method output_type
	6,  // [6:10] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_ip_proto_init() }
func file_ip_proto_init() {
	if File_ip_proto != nil {
		return
	}
	file_options_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_ip_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IpStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ip_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IpSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ip_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssignedTo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ip_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ip); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ip_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IpList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_ip_proto_msgTypes[3].OneofWrappers = []interface{}{}
	file_ip_proto_msgTypes[4].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ip_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_ip_proto_goTypes,
		DependencyIndexes: file_ip_proto_depIdxs,
		MessageInfos:      file_ip_proto_msgTypes,
	}.Build()
	File_ip_proto = out.File
	file_ip_proto_rawDesc = nil
	file_ip_proto_goTypes = nil
	file_ip_proto_depIdxs = nil
}
