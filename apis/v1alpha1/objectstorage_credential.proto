syntax = "proto3";

package objectstorageCredential.v1alpha1;
option go_package = "github.com/opencontrolplane/opencp-spec/grpc";

import "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto";
import "options.proto";

message ObjectStorageCredentialSpec {
    string accesskey = 1;
    string secretkey = 2;
}

message ObjectStorageCredentialStatus {
    string state = 1;
}

message ObjectStorageCredential {
    // Standard object's metadata.
    // More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
    // +optional
    optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 3;

    // Spec defines the behavior of a domain.
    // +optional
    optional ObjectStorageCredentialSpec spec = 4;

    // Status represents the current information about a domain. This data may be out of date.
    // +optional
    optional ObjectStorageCredentialStatus status = 5;
}

message ObjectStorageCredentialList {       
    // Standard object's metadata.
   // More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
   // +optional
   optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 4;

   // List of domains
   repeated ObjectStorageCredential items = 5;
}

service ObjectStorageCredentialService {
    rpc CreateObjectStorageCredential(ObjectStorageCredential) returns (ObjectStorageCredential) {}
    // rpc UpdateObjectStorageCredential(ObjectStorageCredential) returns (ObjectStorageCredential) {}
    rpc DeleteObjectStorageCredential(options.FilterOptions) returns (ObjectStorageCredential) {}
    rpc GetObjectStorageCredential(options.FilterOptions) returns (ObjectStorageCredential) {}
    rpc ListObjectStorageCredential(options.FilterOptions) returns (ObjectStorageCredentialList) {}
}