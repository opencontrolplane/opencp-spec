syntax = "proto3";

package kubernetescluster.v1alpha1;
option go_package = "github.com/opencontrolplane/opencp-spec/grpc";

import "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto";
import "options.proto";


message KubernetesCluster {
    // Standard object's metadata.
    // More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
    // +optional
    optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;
    
    // The spec of the KubernetesCluster.
    KubernetesClusterSpec spec = 2;
    
    // The status of the KubernetesCluster.
    KubernetesClusterStatus status = 3;
}

message KubernetesClusterSpec {
    repeated KubernetesClusterPool pools = 1;
	string version = 2;
	string firewall = 3;
	string cniplugin = 4 [json_name = "cni_plugin"];
    string clustertype = 5 [json_name = "cluster_type"];
    string kubeconfig = 6;
}

message KubernetesClusterPool {
    string id = 1;
	string size = 2;     
	int32  count = 3;      
	bool   autoscaling = 4; 
	optional int64  minsize = 5 [json_name = "min_size"];
	optional int64  maxsize = 6 [json_name = "max_size"];
}

message KubernetesClusterStatus {
    string state = 1;
	string endpoint = 2;
	string publicip = 3 [json_name = "public_ip"];
}

// KubernetesClusterList is a list of KubernetesCluster.
message KubernetesClusterList {
    // Standard list metadata.
    // +optional
    optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;
  
    // Items is the list of VistualMachine.
    repeated KubernetesCluster items = 2;
}

service KubernetesClusterService {
    rpc CreateKubernetesCluster (KubernetesCluster) returns (KubernetesCluster) {}
    rpc GetKubernetesCluster (options.FilterOptions) returns (KubernetesCluster) {}
    rpc ListKubernetesCluster (options.FilterOptions) returns (KubernetesClusterList) {}
    rpc UpdateKubernetesCluster (KubernetesCluster) returns (KubernetesCluster) {}
    rpc DeleteKubernetesCluster (options.FilterOptions) returns (KubernetesCluster) {}
}