syntax = "proto3";

package domain.v1alpha1;
option go_package = "github.com/opencontrolplane/opencp-spec/grpc";

import "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto";
import "options.proto";


message DomainStatus {
    string state = 1;
}

message Records {
    string Name = 1;
    string Value = 2; 
    string Type = 3; 
    optional int32 Priority = 4;
    optional int32 TTL = 5;
}

message DomainSpec {
    repeated Records records = 1;
}

message Domain {
    // Standard object's metadata.
    // More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
    // +optional
    optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 3;

    // Spec defines the behavior of a domain.
    // +optional
    optional DomainSpec spec = 4;

    // Status represents the current information about a domain. This data may be out of date.
    // +optional
    optional DomainStatus status = 5;
}

message DomainList {       
         // Standard object's metadata.
        // More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
        // +optional
        optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 4;

        // List of domains
        repeated Domain items = 5;
}


service DomainService {
    rpc CreateDomain(Domain) returns (Domain) {}
    rpc GetDomain(options.FilterOptions) returns (Domain) {}
    // rpc UpdateDomain(Domain) returns (Domain) {}
    rpc DeleteDomain(options.FilterOptions) returns (Domain) {}
    rpc ListDomains(options.FilterOptions) returns (DomainList) {}
}